{
  "service": "example",
  "provider": {
    "name": "aws",
    "region": "eu-central-1"
  },
  "custom": {
    "serverless-offline": {
      "allowCache": true,
      "useChildProcesses": true
    },
    "serverlessPluginTypescript": {
      "tsConfigFileLocation": "./tsconfig.json"
    }
  },
  "package": {
    "patterns": [
      "lambda/**/index.ts"
    ]
  },
  "functions": {
    "CustomOfflineAuthorizer": {
      "runtime": "nodejs16.x",
      "handler": "offlineAuthorizer.handler"
    },
    "API_user": {
      "handler": "lambda/API_user/index.handler",
      "runtime": "nodejs16.x",
      "events": [
        {
          "http": {
            "method": "GET",
            "path": "/user",
            "cors": true,
            "integration": "lambda_proxy",
            "authorizer": {
              "name": "CustomOfflineAuthorizer",
              "identitySource": "method.request.header.Authorization"
            }
          }
        },
        {
          "http": {
            "method": "POST",
            "path": "/user",
            "cors": true,
            "integration": "lambda_proxy",
            "authorizer": {
              "name": "CustomOfflineAuthorizer",
              "identitySource": "method.request.header.Authorization"
            }
          }
        },
        {
          "http": {
            "method": "ANY",
            "path": "/user/{proxy+}",
            "cors": true,
            "integration": "lambda_proxy",
            "authorizer": {
              "name": "CustomOfflineAuthorizer",
              "identitySource": "method.request.header.Authorization"
            }
          }
        }
      ]
    }
  },
  "plugins": [
    "serverless-plugin-typescript",
    "serverless-offline"
  ]
}